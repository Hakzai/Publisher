openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: User Controller
  description: "Supports operations: list, create, edit, find by id, delete"
- name: Author Controller
  description: "Supports operations: list, create, edit, find by id, delete"
- name: Book Controller
  description: "Supports operations: list, create, edit, find by id, find by author,\
    \ delete"
- name: Authentication Controller
  description: "Supports operations: login"
paths:
  /users/edit:
    post:
      tags:
      - User Controller
      summary: Edit Users
      description: "Will edit and save Users. If User Id is not sent on the request,\
        \ it will return error."
      operationId: edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /users/create:
    post:
      tags:
      - User Controller
      summary: Create Users
      description: "Will create and save Users. User Ids are auto incremented so if\
        \ Id is sent on the request, it will return error."
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /books/edit:
    post:
      tags:
      - Book Controller
      summary: Edit Books
      description: "Will edit and save Books. If Book Id is not sent on the request,\
        \ it will return error. Author Ids are also mandatory."
      operationId: edit_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
        required: true
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Book"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /books/create:
    post:
      tags:
      - Book Controller
      summary: Create Books
      description: "Will create and save Books. Book Ids are auto incremented so if\
        \ Id is sent on the request, it will return error. Author Ids are mandatory,\
        \ in case they are not sent, it will return error. Author name can be ignored,\
        \ it'll be mapped through Id"
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
        required: true
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Book"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /authors/edit:
    post:
      tags:
      - Author Controller
      summary: Edit Authors
      description: "Will edit and save Authors. If Author Id is not sent on the request,\
        \ it will return error."
      operationId: edit_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Author"
        required: true
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Author"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /authors/create:
    post:
      tags:
      - Author Controller
      summary: Create Authors
      description: "Will create and save Authors. Author Ids are auto incremented\
        \ so if Id is sent on the request, it will return error."
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Author"
        required: true
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Author"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /auth/login:
    post:
      tags:
      - Authentication Controller
      summary: Login
      description: Will perform login with a valid username and password which should
        be passed through Auth fields (neither header or body)
      operationId: authenticate
      responses:
        "200":
          description: "Success: returns a valid authentication token string"
          content:
            '*/*':
              schema:
                type: string
        "401":
          description: "Could not authenticate: Wrong username or password"
          content:
            application/json: {}
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /users/list:
    get:
      tags:
      - User Controller
      summary: List Users
      description: Search and retrieves all Users
      operationId: list
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /users/find/{id}:
    get:
      tags:
      - User Controller
      summary: Find User By Id
      description: Search and retrieve User for corresponding Id
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /books/list:
    get:
      tags:
      - Book Controller
      summary: List Books
      description: Search and retrieves all books
      operationId: list_1
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /books/findBooksByAuthorId/{id}:
    get:
      tags:
      - Book Controller
      summary: Find Books By Author
      description: Search and retrieve all books for corresponding Author Id
      operationId: findAllBooksByAuthorId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /books/find/{id}:
    get:
      tags:
      - Book Controller
      summary: Find Book By Id
      description: Search and retrieve book for corresponding Id
      operationId: findById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Book"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /authors/list:
    get:
      tags:
      - Author Controller
      summary: List Authors
      description: Search and retrieves all Authors
      operationId: list_2
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Author"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /authors/find/{id}:
    get:
      tags:
      - Author Controller
      summary: Find Author By Id
      description: Search and retrieve Author for corresponding Id
      operationId: findById_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Author"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /users/delete/{id}:
    delete:
      tags:
      - User Controller
      summary: Delete Users
      description: "Will delete User for given Id. If User does not exist, will not\
        \ return error."
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /books/delete/{id}:
    delete:
      tags:
      - Book Controller
      summary: Delete Books
      description: "Will delete book for given Id. If book does not exist, will not\
        \ return error."
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
        "500":
          description: Internal Server Error
          content:
            application/json: {}
  /authors/delete/{id}:
    delete:
      tags:
      - Author Controller
      summary: Delete Authors
      description: "Will delete Author for given Id. If Author does not exist, will\
        \ not return error."
      operationId: delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "403":
          description: User is not allowed to perform action
          content:
            application/json: {}
        "401":
          description: Not authenticated
          content:
            application/json: {}
        "200":
          description: Success
        "500":
          description: Internal Server Error
          content:
            application/json: {}
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        username:
          type: string
        password:
          type: string
        roles:
          type: string
    Author:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        name:
          type: string
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        title:
          type: string
        genre:
          type: string
        publisher:
          type: string
        pageQuantity:
          type: string
        author:
          $ref: "#/components/schemas/Author"
